{
    "version": "https://jsonfeed.org/version/1",
    "title": "慕青の迷途 • All posts by \"tools\" tag",
    "description": "时雨病重症患者！！！",
    "home_page_url": "https://cecilia.cool",
    "items": [
        {
            "id": "https://cecilia.cool/2022/07/29/Tools/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/",
            "url": "https://cecilia.cool/2022/07/29/Tools/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%8C%87%E5%8D%97/",
            "title": "Hexo搭建博客指南",
            "date_published": "2022-07-29T06:16:57.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>使用 Hexo+Github 搭建博客，因为涉及到部分插件或者安装包的下载，<sub>建议使用魔法上网</sub>。</p>\n<blockquote>\n<p>推荐文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNjYyNTI0OQ==\">https://zhuanlan.zhihu.com/p/26625249</span></p>\n<p>推荐视频：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW1VNHkxajcybj9zcG1faWRfZnJvbT0zMzMuMzM3LnNlYXJjaC1jYXJkLmFsbC5jbGljayZhbXA7dmRfc291cmNlPTVhY2Y1YTdiMjNkMjhlNzYzM2U1YTliMzgxYzU3YzQy\">https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=333.337.search-card.all.click&amp;vd_source=5acf5a7b23d28e7633e5a9b381c57c42</span></p>\n</blockquote>\n<h1 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<h2 id=\"下载nodejs\"><a class=\"anchor\" href=\"#下载nodejs\">#</a> 下载 Node.js</h2>\n<p>简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vdjgv\">Chrome V8</span> 引擎的 <strong>JavaScript 运行环境</strong>。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tLw==\">npm</span>，是全球最大的开源库生态系统。</p>\n<p>官网下载:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==\">https://nodejs.org/en/download/</span></p>\n<p>安装完成后，可以通过命令行查看： <code>node -v</code>  显示安装版本， <code>npm -v</code>  显示 npm 版本。新版的 Node.js 已自带 npm，安装 Node.js 时会一起安装，<strong>npm 的作用就是对 Node.js 依赖的包进行管理，也可以理解为用来安装 / 卸载 Node.js 需要的东西。</strong></p>\n<h3 id=\"环境配置\"><a class=\"anchor\" href=\"#环境配置\">#</a> 环境配置</h3>\n<p>npm 在安装 node.js 需要的依赖时，会默认放在 C 盘 <code>C:|Users|用户名\\AppData\\Roaming\\npm</code> ，所以此处我们需要手动设置 npm 安装的全局模块所在的路径，以及缓存 cache 得路径。</p>\n<p>在 nodejs 文件夹下创建 node_cache,node_global 即可。</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/07/29/90aec5c64426e20a.png\" alt=\"image-20220729144241266\" /></p>\n<p>拿到相应的路径，在终端执行以下命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> prefix <span class=\"token string\">\"S:\\DevTools\\Nodejs<span class=\"token entity\" title=\"\\n\">\\n</span>ode_global\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> cache <span class=\"token string\">\"S:\\DevTools\\Nodejs<span class=\"token entity\" title=\"\\n\">\\n</span>ode_cache\"</span></pre></td></tr></table></figure><p>然后再配置环境变量，先配置系统变量</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/07/29/b18f9f922882f863.png\" alt=\"image-20220729144419380\" /></p>\n<p>然后再配置用户变量中的 path，之前的值为：  <code>C:\\Users\\Cyan\\AppData\\Roaming\\npm</code> ，将其改为下面的值</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/07/29/71d161b1f67a1e9f.png\" alt=\"image-20220729144448110\" /></p>\n<h2 id=\"下载git\"><a class=\"anchor\" href=\"#下载git\">#</a> 下载 Git</h2>\n<p>不多说</p>\n<h2 id=\"下载hexo\"><a class=\"anchor\" href=\"#下载hexo\">#</a> 下载 Hexo</h2>\n<p>在终端执行命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli <span class=\"token parameter variable\">--location</span><span class=\"token operator\">=</span>global</pre></td></tr></table></figure><p>如果下载失败，错误信息显示权限不足，那么请使用管理员身份运行 cmd。</p>\n<p>下载完成后，使用 <code>hexo -v</code>  查看 hexo 版本</p>\n<h2 id=\"github相关操作\"><a class=\"anchor\" href=\"#github相关操作\">#</a> Github 相关操作</h2>\n<p>下面操作以我的 Github 为例进行讲解。</p>\n<h3 id=\"建立仓库\"><a class=\"anchor\" href=\"#建立仓库\">#</a> 建立仓库</h3>\n<p>我的 Github 的昵称是 <code>Cyan-N</code> ，所以要建立一个仓库叫做： <code>Cyan-N.github.io</code> 。<strong>后缀名统一，前面必须是账号的昵称</strong>。</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/07/29/87a0634c1fc7f4b2.png\" alt=\"image-20220729144929165\" /></p>\n<h3 id=\"生成ssh密钥\"><a class=\"anchor\" href=\"#生成ssh密钥\">#</a> 生成 ssh 密钥</h3>\n<p>随便进入文件夹，然后右键进入  <code>Git Bash Here</code> ，调用命令： <code>ssh-keygen -t rsa -C &quot;邮箱&quot;</code> ，<strong>此时不要关闭 Git</strong>。然后就会在  <code>C:\\Users\\Cyan\\.ssh</code>  里面生成 <code>id_rsa</code>  和 <code>id_rsa.pub</code>  文件，记事本进入 <code>id_rsa.pub</code> ， <code>ctrl+a，ctrl+c</code>  复制全部指令。</p>\n<p>在 <code>Github</code>  中，进入 <code>setting-&gt;SSH and GPG keys</code>  创建 <code>SSH Key</code> ， <code>title</code>  随便取，然后在 <code>key</code>  中粘贴刚才复制的内容。然后在刚才的 Git 界面输入以下命令： <code>ssh -T git@github.com</code> 。测试 ssh 是否绑定成功。</p>\n<p>再次强调， <code>Github</code>  是国外网站，会抽风。</p>\n<h1 id=\"使用hexo\"><a class=\"anchor\" href=\"#使用hexo\">#</a> 使用 Hexo</h1>\n<h2 id=\"生成本地网页\"><a class=\"anchor\" href=\"#生成本地网页\">#</a> 生成本地网页</h2>\n<p>找一个文件夹，用于存放你的博客文件，此处我命名为 Blog。然后在这个界面中  <code>Git Bash Here</code> 。其实建议以管理员身份运行 <code>Git</code> 。然后输入命令： <code>hexo init</code>  用于初始化。</p>\n<p><code>hexo s</code>  用于启动服务，此时会弹出一个网址，就可以通过浏览器来查看， <code>ctrl+c</code>  关闭本地服务器，就不能再访问了。</p>\n<h2 id=\"修改配置\"><a class=\"anchor\" href=\"#修改配置\">#</a> 修改配置</h2>\n<p>在存放博客文件的文件夹，找到_config.yml 文件，在最后面修改为下面代码：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Deployment</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/Cyan<span class=\"token punctuation\">-</span>N/Cyan<span class=\"token punctuation\">-</span>N.github.io.git <span class=\"token comment\">#此处就是仓库地址</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure><h2 id=\"下载工具\"><a class=\"anchor\" href=\"#下载工具\">#</a> 下载工具</h2>\n<p>在存放博客文件的文件夹，进入 Git，这里还是建议管理员身份。执行命令： <code>npm install hexo-deployer-git --save</code>  安装 Git 部署插件。</p>\n<p>然后执行： <code>hexo g</code>  生成网页文件，再执行： <code>hexo d</code>  提交到 Github 上，这一步可能会连接超时，多试几次。</p>\n<h1 id=\"结尾\"><a class=\"anchor\" href=\"#结尾\">#</a> 结尾</h1>\n<p>现在你已经完成了博客的搭建，你可以通过访问你的仓库地址，就是<strong>修改配置</strong>里面的那个网址来访问你的博客。其实还有一些我没有讲，比如域名替换和 https 使用，更换主题，通过修改主题中的_config.yml 实现个性化博客。</p>\n<p>还神起爪子啊，个人赶门去搜一哈（翻译：还愣着干什么，自己马上去搜一下）</p>\n",
            "tags": [
                "tools"
            ]
        }
    ]
}