{
    "version": "https://jsonfeed.org/version/1",
    "title": "慕青の迷途 • All posts by \"myabtis\" tag",
    "description": "时雨病重症患者！！！",
    "home_page_url": "https://cecilia.cool",
    "items": [
        {
            "id": "https://cecilia.cool/2022/10/19/Java/Mybatis/Mybatis(6)-%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",
            "url": "https://cecilia.cool/2022/10/19/Java/Mybatis/Mybatis(6)-%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",
            "title": "Mybatis(6)--动态代理",
            "date_published": "2022-10-19T08:01:45.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<blockquote>\n<p>请先学习 Java 反射部分</p>\n</blockquote>\n<h2 id=\"静态代理\"><a class=\"anchor\" href=\"#静态代理\">#</a> 静态代理</h2>\n<p>一方提供接口定义行为，并实现行为的基本操作。代理方在执行该行为时，可以加入自己的行为进去。这样需要提前知道接口的定义并进行实现才可以完成代理。而 Mybatis 这样的是无法预知代理接口的，我们就需要用到动态代理。</p>\n<blockquote>\n<p>JDK 提供的反射框架就为我们很好地解决了动态代理的问题。</p>\n</blockquote>\n<p>在使用 Mybatis 的时候，我们可以只定义一个 XxxMaper 接口，然后直接利用这个接口定义的抽象方法来进行增删改查操作，Mybatis 内部实际上利用了动态代理技术帮我们生成了这个接口的代理类。</p>\n<h1 id=\"动态代理\"><a class=\"anchor\" href=\"#动态代理\">#</a> 动态代理</h1>\n<p>我们带着 2 个问题来进行源码分析：</p>\n<ul>\n<li>\n<p>动态代理类是如何生成的</p>\n</li>\n<li>\n<p>动态代理类是如何对方法进行拦截的</p>\n</li>\n</ul>\n<h2 id=\"生成时机\"><a class=\"anchor\" href=\"#生成时机\">#</a> 生成时机</h2>\n<p>让我们先回到使用 xml 映射接口的阶段（就是忘掉注解开发），打开一个 web 程序，因为资源文件一般都放在 <code>resources</code>  文件夹里面，所以映射接口的 xml 文件也放在里面。</p>\n<p>总体如图：</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/10/19/a39d795cee468fd8.jpg\" alt=\"\" /></p>\n<p>再将映射接口的 xml 文件配置到 <code>mybatis-config.xml</code>  里面即可：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mappers</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mappers/Mapper-config.xml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mappers</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>最后在主函数里运行：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">Mapper</span> mapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Mapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>mapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 结果：org.apache.ibatis.binding.MapperProxy@318ba8c8</span></pre></td></tr></table></figure><p>很明显，通过调用 <code>getMapper(Class&lt;T&gt;)</code> ，Mybatis 为我们动态生成了一个接口的实例化对象，现在我更改一个小地方让程序报个错：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.cyan.mappers.Mappe<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectStudent<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.cyan.entity.Student<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        select * from student</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>我们将接口的全类路径名故意写错，这是一个拙劣的错误，在 IDEA 里面 <code>selectStudent</code>  甚至会爆红。</p>\n<p>报的错误如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Exception</span> in thread <span class=\"token string\">\"main\"</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>binding<span class=\"token punctuation\">.</span></span>BindingException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Type</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>cyan<span class=\"token punctuation\">.</span>mappers<span class=\"token punctuation\">.</span></span>Mapper</span> is not known <span class=\"token keyword\">to</span> <span class=\"token namespace\">the</span> <span class=\"token class-name\">MapperRegistry</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>binding<span class=\"token punctuation\">.</span></span>MapperRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MapperRegistry</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">47</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span>Configuration</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">745</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><blockquote>\n<p>我不是直接带你点入源码查看，而是通过这个错误从中切入，用心良苦，自我感动 ing。</p>\n</blockquote>\n<p>我们看一下报错的信息：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Type interface com.cyan.mappers.Mapper is not known to the MapperRegistry.</pre></td></tr></table></figure><p>我们希望动态代理一个 <code>Mapper</code>  的实例对象，但是 <code>Mybatis</code>  说这个接口的全类路径对于 <code>MapperRegister</code>  是不知道的。</p>\n<p>通过报错的定位点进去：</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/10/19/8d8b3ba43b87a522.jpg\" alt=\"\" /></p>\n<p>我们定位找到了这段代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 因为博客展示问题，缩可能和源码不一样</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">void</span> <span class=\"token function\">addMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">isInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasMapper</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BindingException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Type \"</span> <span class=\"token operator\">+</span> type <span class=\"token operator\">+</span> <span class=\"token string\">\" is already known to the MapperRegistry.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// ... </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 现在没必要研究具体的代码细节</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这是 <code>MapperRegister</code>  类的代码，看 <code>throw</code>  抛出的异常正是控制台显示的异常。</p>\n<ul>\n<li><code>addMapper</code>  将 mybatis 解析配置文件时，将需要生成动态代理类的接口注册到其中。</li>\n<li><code>getMapper</code>  就是用于创建接口的动态类。</li>\n</ul>\n<p>正是因为无法将接口注册到 <code>MapperRegister</code>  才会出错。</p>\n<h3 id=\"底层源码\"><a class=\"anchor\" href=\"#底层源码\">#</a> 底层源码</h3>\n<p>现在从 <code>sqlSession.getMapper(Class&lt;T&gt;)</code>  里面查看源码：</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/10/19/65e8fe8ce6574d26.jpg\" alt=\"\" /></p>\n<p>查看一下实现类的 <code>getMapper</code> ：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DefaultSqlSession</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SqlSession</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Configuration</span> configuration<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 将实际的 getmapper 交给 Configuration 处理</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 并且传递 this--SqlSeesion 参数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> configuration<span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>其实， <code>Configuration</code>  也是交给 <code>MapperRegister</code>  执行的，并且将 <code>SqlSession</code>  了下去。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Configuration</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">MapperRegistry</span> mapperRegistry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MapperRegistry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 注册</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">void</span> <span class=\"token function\">addMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      mapperRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">addMapper</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 创建</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> type<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SqlSession</span> sqlSession<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">return</span> mapperRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> sqlSession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是，最终又回到了 <code>MapperRegister</code>  这个类上，我们现在看一下源码（内含 <code>getMapper()</code>  方法）：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MapperRegistry</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Configuration</span> config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// 用于维护所有要生成动态代理类 XxxMapper 映射关系，</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">//key 就是要生成动态代理类的 Class 对象，value 是真正生成动态代理的工厂类</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MapperProxyFactory</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> knownMappers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      \t\t\t\t\t\t\t\t     <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MapperProxyFactory</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> type<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SqlSession</span> sqlSession<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 获取创建动态代理的工厂对象 MapperProxyFactory</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token class-name\">MapperProxyFactory</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> mapperProxyFactory <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MapperProxyFactory</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        \t\t\t\t\t\t\t\t\t\t\t\t\tknownMappers<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mapperProxyFactory <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token comment\">// 抛出之前控制台的报错，太长了，这里就不显示</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token comment\">// 每次调用都创建一个新的代理对象返回</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">return</span> mapperProxyFactory<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span>sqlSession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BindingException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error getting mapper instance. Cause: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总结步骤：</p>\n<ul>\n<li>调用 SqlSession 的 <code>getMapper()</code>  方法，随后这个委托向下传递给 <code>MapperRegister</code> 。</li>\n<li><code>MapperRegister</code>  通过加载配置文件时注册的代理工厂来返回需要的实例类对象。</li>\n</ul>\n<p><strong>是通过 <code>newIntance(sqlSession)</code>  返回的对象。</strong></p>\n<p>之前我们讲过如何<a href=\"https://cecilia.cool/2022/10/16/Java/Mybatis/Mybatis(1)-%E5%88%9D%E4%BD%BF%E7%94%A8/\">解析 xml 文件</a>，也许你没有记住相关代码该怎么写，放心，我也没记住。但是之前说过，xml 里面一层一层的标签嵌套其实就是树的节点，在注册动态代理时，就是通过 <code>parse(/mappers)</code>  方法拿到 mapper 的 <code>namespace</code> ，再注册，总体流程很清晰吧。</p>\n<blockquote>\n<p>好了好了，打住，这部分再看源码就不礼貌了，不要纠结框架底层代码细节，没卵用，别说什么学学别人怎么写的，有时候我连自己写的代码都学不懂。</p>\n</blockquote>\n<h2 id=\"方法拦截\"><a class=\"anchor\" href=\"#方法拦截\">#</a> 方法拦截</h2>\n<blockquote>\n<p>等我复习一下反射再来填坑</p>\n</blockquote>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<blockquote>\n<p>田守枝 Java 技术博客：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50aWFuc2hvdXpoaS5jb20vYXBpL3R1dG9yaWFscy9teWJhdGlzLzM2MA==\">http://www.tianshouzhi.com/api/tutorials/mybatis/360</span></p>\n<p>青空の霞光：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL3Fpbmdrb25neGlhZ3VhbmcvamF2YXdlYi9nbjBzeXQjODE1ZjhjZWM=\">https://www.yuque.com/qingkongxiaguang/javaweb/gn0syt#815f8cec</span></p>\n</blockquote>\n",
            "tags": [
                "Myabtis"
            ]
        }
    ]
}