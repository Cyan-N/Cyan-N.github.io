{
    "version": "https://jsonfeed.org/version/1",
    "title": "慕青の迷途 • All posts by \"日志框架\" tag",
    "description": "时雨病重症患者",
    "home_page_url": "https://cecilia.cool",
    "items": [
        {
            "id": "https://cecilia.cool/2022/10/20/Framework/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/%E6%97%A5%E5%BF%97(2)-JUL%E6%97%A5%E5%BF%97/",
            "url": "https://cecilia.cool/2022/10/20/Framework/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/%E6%97%A5%E5%BF%97(2)-JUL%E6%97%A5%E5%BF%97/",
            "title": "日志(2)--JUL日志",
            "date_published": "2022-10-20T03:00:13.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h1>\n<p>在上一篇文章：配置文件，部分代码就是 JUL，如果你想对整个 Java 日志生态了解，可以看一下安员外关于 SLF4J 的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWFTNHkxWTdpUC8/c3BtX2lkX2Zyb209MzMzLjc4OCZhbXA7dmRfc291cmNlPTVhY2Y1YTdiMjNkMjhlNzYzM2U1YTliMzgxYzU3YzQy\">视频</span></p>\n<p>本文主要是快速把 JUL 的使用过一遍。</p>\n<p>JUL（Java Util Logging），它是 Java 原生的日志框架，位于 java.util.logging.Logger 包。相对其他的框架使用方便，学习简单，主要是使用在小型项目中。</p>\n<p>JUL 有几个组件： <code>Logger</code> 、 <code>Handler</code> 、 <code>Filter</code> 。用户使用 <code>Logger</code>  记录日志，每个 <code>Logger</code>  有若干个 <code>Handler</code> ，日志的输出就是 <code>Handler</code>  完成的，而输出前会经过 <code>Filter</code>  过滤，判断哪些日志可以通过（通过 <code>level</code> ，关键词等判断）， <code>Handler</code>  在输出日志（控制台，文件）时会使用 <code>Layout</code>  排版。</p>\n<blockquote>\n<p>关键词： <code>Logger</code> ， <code>Handler</code> ， <code>Filter</code> ， <code>level</code> ， <code>Layout</code> 。</p>\n</blockquote>\n<p>看一下简单使用：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JulDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JulDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">//info 专门输出 info 等级日志</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is info log by info() method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">//log 输出日志需要指定等级</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"This is info log by log() method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//log 可以指定占位符</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"cyan\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">String</span> age <span class=\"token operator\">=</span> <span class=\"token string\">\"250\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"用户姓名：&#123;0&#125;, 用户年龄：&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"loggerlevel\"><a class=\"anchor\" href=\"#loggerlevel\">#</a> Logger/Level</h1>\n<p>JUL 的日志级别有：</p>\n<table>\n<thead>\n<tr>\n<th>日志级别</th>\n<th>数值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OFF</td>\n<td>Integer.MAX_VALUE</td>\n<td>关闭所有消息的日志记录</td>\n</tr>\n<tr>\n<td>SEVERE</td>\n<td>1000</td>\n<td>错误信息（最高级的日志级别）</td>\n</tr>\n<tr>\n<td>WARNING</td>\n<td>900</td>\n<td>警告信息</td>\n</tr>\n<tr>\n<td>INFO</td>\n<td>800</td>\n<td>默认信息（默认级别）</td>\n</tr>\n<tr>\n<td>CONFIG</td>\n<td>700</td>\n<td>配置信息</td>\n</tr>\n<tr>\n<td>FINE</td>\n<td>500</td>\n<td>详细信息（少）</td>\n</tr>\n<tr>\n<td>FINER</td>\n<td>400</td>\n<td>详细信息（中）</td>\n</tr>\n<tr>\n<td>FINEST</td>\n<td>300</td>\n<td>详细信息（多）（最低级的日志级别）</td>\n</tr>\n<tr>\n<td>ALL</td>\n<td>Integer.MIN_VALUE</td>\n<td>启用所有消息的日志记录</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Log 默认等级是 <code>INFO</code> </strong>，等级低于当前日志等级的都打印不出来：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 日志默认级别是 info</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印info等级日志\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"通过log()方法打印info等级日志\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">severe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印severe等级日志\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">finer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印finer等级日志，等级小于日志当前等级，打印不出来\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>结果:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>十月 20, 2022 11:15:39 上午 com.cyan.Main main</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>信息：打印 info 等级日志</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>十月 20, 2022 11:15:39 上午 com.cyan.Main main</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>信息：通过 log () 方法打印 info 等级日志</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>十月 20, 2022 11:15:39 上午 com.cyan.Main main</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>严重：打印 severe 等级日志</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>*/</span></pre></td></tr></table></figure><p>我们可以手动设置日志级别，但是只修改日志等级是无法生效，要使用对应的 Handler 才行：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 修改日志级别</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FINEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 不使用父日志处理器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">setUseParentHandlers</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 使用自定义日志处理器</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">ConsoleHandler</span> handler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConsoleHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    handler<span class=\"token punctuation\">.</span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FINEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">addHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SEVERE</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"严重的错误\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我就是错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">finer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印finer等级日志\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>日志记录器 <code>Logger</code>  和处理器 <code>Handler</code>  的级别进行统一的设置，才会达到日志显示相应级别的效果。</p>\n<p>每一个 <code>Logger</code>  都是默认使用父 <code>Handler</code> ，该 <code>handler</code>  类型为 <code>ConsoleHandler</code> ，日志级别为 <code>INFO</code> ，</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Handler</span> handler <span class=\"token operator\">=</span> logger<span class=\"token punctuation\">.</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>所以我们这么写，也可以改变 <code>logger</code>  的日志等级：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//logger 仍会记录 WARNING 以下的日志，但是不会打印</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Handler</span> handler <span class=\"token operator\">=</span> logger<span class=\"token punctuation\">.</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>handler<span class=\"token punctuation\">.</span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"handler\"><a class=\"anchor\" href=\"#handler\">#</a> Handler</h1>\n<p>所谓自定义，无非就是设置 <code>handler</code> ， <code>fliter</code> ， <code>level</code>  等。</p>\n<p><code>ConsoleHandler</code>  将信息输出到控制台， <code>FileHandler</code>  输出到文件中：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 需要在项目目录下新建 log/jul.log</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JulDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JulDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">FileHandler</span> fileHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileHandler</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logs/jul.log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 设置打印格式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        fileHandler<span class=\"token punctuation\">.</span><span class=\"token function\">setFormatter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleFormatter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">addHandler</span><span class=\"token punctuation\">(</span>fileHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is info log by info() method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"This is info log by log() method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"cyan\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">String</span> age <span class=\"token operator\">=</span> <span class=\"token string\">\"250\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"用户姓名：&#123;0&#125;, 用户年龄：&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>此处并没有关闭父日志处理器，所以同时存在两个处理器，因此<strong>控制台和文件都会生效</strong>。</p>\n<p>可以通过 <code>Formatter</code>  类自定义打印格式，<strong>本质就是挨个获取要打印的内容，自己选择重新排版，换颜色</strong>等</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">setUseParentHandlers</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 为了让颜色变回普通的颜色，通过代码块在初始化时将输出流设定为 System.out</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">ConsoleHandler</span> handler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConsoleHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">0</span><span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 创建匿名内部类实现自定义的格式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    handler<span class=\"token punctuation\">.</span><span class=\"token function\">setFormatter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Formatter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LogRecord</span> record<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">SimpleDateFormat</span> format <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd HH:mm:ss.SSS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 格式化日志时间</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">String</span> time <span class=\"token operator\">=</span> format<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">getMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// String level = record.getLevel ().getName ();  // 获取日志级别名称</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// 获取本地化名称（语言跟随系统）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">String</span> level <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">getLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLocalizedName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">String</span> thread <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 线程名称</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">long</span> threadID <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">getThreadID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 线程 ID</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\">String</span> className <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 发送日志的类名</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 日志消息</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">//\\033 [33m 是颜色代码，30~37 有对应的颜色，38 是没有颜色，IDEA 能显示，某些地方不支持</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">\"\\033[38m\"</span> <span class=\"token operator\">+</span> time <span class=\"token operator\">+</span> <span class=\"token string\">\"  \\033[33m\"</span> <span class=\"token operator\">+</span> level <span class=\"token operator\">+</span> <span class=\"token string\">\" \\033[35m\"</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token operator\">+</span> threadID <span class=\"token operator\">+</span> <span class=\"token string\">\"\\033[38m --- [\"</span> <span class=\"token operator\">+</span> thread <span class=\"token operator\">+</span> <span class=\"token string\">\"] \\033[36m\"</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token operator\">+</span> className <span class=\"token operator\">+</span> <span class=\"token string\">\"\\033[38m : \"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">addHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是测试消息1...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"我是测试消息2...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"我是测试消息3...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>标有注释的地方很重要，请特别注意。</p>\n<h1 id=\"filterlogrecord\"><a class=\"anchor\" href=\"#filterlogrecord\">#</a> Filter/LogRecord</h1>\n<p>希望某些日志信息不被输出，直接看代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 自定义过滤规则</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 日志信息不能包含 “普通” 关键词</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">setFilter</span><span class=\"token punctuation\">(</span>record <span class=\"token operator\">-></span> <span class=\"token operator\">!</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"普通\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SEVERE</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"严重的错误\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我就是错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"警告的内容\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"普通的信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 不会被打印</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>看一下 <code>Filter</code>  接口的源码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@FunctionalInterface</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Filter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 返回 false 就会被过滤丢弃</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isLoggable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LogRecord</span> record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>所以直接使用 <code>Lambda</code>  即可，在 <code>JUL</code>  中，一条日志信息被 <code>Logger</code>  记录时，会被打包成 <code>LogRecord</code> ，里面包含了以下重要的信息，上文我们自定义 <code>handler</code>  时也用到了，所以我们还需要看一下 <code>LogRecord</code>  的包含了什么，才方便我们自定义 <code>handler</code> ：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Level</span> level<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> sequenceNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> sourceClassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> sourceMethodName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> threadID<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> millis<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Throwable</span> thrown<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> loggerName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> resourceBundleName<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在重写 <code>handler</code>  时，拿到 <code>LogRecord</code>  就自己通过代码提示直到哪些属性可以获得。</p>\n<h1 id=\"父子关系\"><a class=\"anchor\" href=\"#父子关系\">#</a> 父子关系</h1>\n<p><code>JUL</code>  中 <code>Logger</code>  之间存在父子关系，这种父子关系通过<strong>树状结构</strong>存储， <code>JUL</code>  在初始化时会创建一个顶层  <code>RootLogger</code>  作为所有 <code>Logger</code>  父 <code>Logger</code> ，存储上作为树状结构的根节点，父子关系通过路径来关联。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TreeDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Logger</span> loggerT <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TreeDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Logger</span> loggerJ <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JulDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 都是同一个 RootLogger</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"T parent Logger : \"</span> <span class=\"token operator\">+</span> loggerT<span class=\"token punctuation\">.</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"J parent Logger : \"</span> <span class=\"token operator\">+</span> loggerJ<span class=\"token punctuation\">.</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 设置父 Logger</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        loggerT<span class=\"token punctuation\">.</span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>loggerJ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>loggerJ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"T parent Logger : \"</span> <span class=\"token operator\">+</span> loggerT<span class=\"token punctuation\">.</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"配置文件\"><a class=\"anchor\" href=\"#配置文件\">#</a> 配置文件</h1>\n<p>我们可以通过配置文件来修改 <code>Logger</code>  的默认配置，在 <code>jre/lib/logging.properties</code>  下就是 <code>JUL</code>  的基本配置：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">.level</span><span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">INFO</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># default file output is in user's home directory.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.pattern</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">%h/java%u.log</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.limit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">50000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.count</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.formatter</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.XMLFormatter</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># Limit the message that are printed on the console to INFO and above.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.ConsoleHandler.level</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">INFO</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.ConsoleHandler.formatter</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.SimpleFormatter</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token key attr-name\">com.xyz.foo.level</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">SEVERE</span></pre></td></tr></table></figure><p>我们将这个文件复制一份放到 <code>resource</code>  目录下，稍微改一下：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># rootLogger</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">handlers</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.FileHandler</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">.level</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">INFO</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.pattern</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">logs/java%u.log</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 文件大小，字节单位</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.limit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">50000</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 日志文件循环数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.count</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># append 为追加</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.append</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">true\t</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.formatter</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.SimpleFormatter</span></pre></td></tr></table></figure><p>解释一下， <code>pattern</code>  表示输出文件名，之后就会将日志输出到 <code>logs/java0.log</code> 、 <code>logs/java1.log</code> ...，详细解释参照：</p>\n<p><img data-src=\"https://s3.uuu.ovh/imgs/2022/12/02/84b557431f6c1c24.jpg\" alt=\"\" /></p>\n<p>然后就可以加载配置文件了：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 读取自定义配置文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">InputStream</span> ins <span class=\"token operator\">=</span> <span class=\"token class-name\">LogProDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logging.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 获取日志管理器对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">LogManager</span> logManager <span class=\"token operator\">=</span> <span class=\"token class-name\">LogManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 加载配置文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        logManager<span class=\"token punctuation\">.</span><span class=\"token function\">readConfiguration</span><span class=\"token punctuation\">(</span>ins<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LogProDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is info message in LogProDemo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们也可以单独配置某个类的 <code>Logger</code> ，从一开始，我们获得的 <code>Logger</code>  就是传入类的全类路径名加载得到的</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span>xxx<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>准备工作是，我们先创建一个类：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProjectInfo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> version <span class=\"token operator\">=</span> <span class=\"token string\">\"1.0.10\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProjectInfo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Project is Loading...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当我们第一次调用 <code>version</code>  时，会使得类加载，然后就会执行静态语句，此时如果是上文的配置文件，那么日志信息就会被输出到 <code>/logs/java0.log</code>  文件里面。但是我现在希望由 <code>ProjectInfo</code>  产生的日志都输出到控制台中，就可以追加以下配置为：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># ProjectInfo 的 Logger 设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">neu.ProjectInfo.level</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">INFO</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">neu.ProjectInfo.handlers</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.ConsoleHandler, java.util.logging.FileHandler</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">neu.ProjectInfo.useParentHandlers</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">false</span></pre></td></tr></table></figure><p>然后主程序加载配置文件，访问 <code>version</code>  属性触发类加载机制：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 读取自定义配置文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">InputStream</span> ins <span class=\"token operator\">=</span> <span class=\"token class-name\">LogProDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logging.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 获取日志管理器对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">LogManager</span> logManager <span class=\"token operator\">=</span> <span class=\"token class-name\">LogManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 加载配置文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        logManager<span class=\"token punctuation\">.</span><span class=\"token function\">readConfiguration</span><span class=\"token punctuation\">(</span>ins<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LogProDemo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 这也是一个日志</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is info message in LogProDemo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProjectInfo</span><span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>十二月 02, 2022 8:03:30 下午 neu.ProjectInfo &lt;clinit></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>信息: Project is Loading...</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>*/</span></pre></td></tr></table></figure><p>你可能发现一个问题， <code>logs</code>  包下多了一个 <code>java1.log</code> ，但是明明配置文件 <code>count=1</code> ，为什么还会多出日志文件？原因在于 <code>pattern</code>  使用的是 <code>%u</code>  参数，上述代码的第一个 <code>log.info()</code>  占用了 <code>java0.log</code> ，而这个 0 其实就是 <code>%u</code> ，所以会重新使用 1，2，3 来唯一标识日志文件（上文其实也提到了的），这种情况还有个前置条件，就是 <code>count=1</code> 。如果既没有指定 <code>%g</code> ， <code>count</code>  又大于 1，数字后缀就会加到文件后缀后面。</p>\n<p>举个例子：我们还是执行上文的代码：</p>\n<p>此时配置为</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.pattern</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">logs/java%u.log</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.count</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">1</span></pre></td></tr></table></figure><p>产生的日志文件就是 <code>java0.log</code>  对应 <code>LogProDemo</code>  的日志， <code>java1.log</code>  对应 <code>ProjectInfo</code>  日志。</p>\n<p>如果配置为：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.pattern</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">logs/java%u.log</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.count</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">2</span></pre></td></tr></table></figure><p>产生的日志就是 <code>java0.log.0</code>  和 <code>java1.log.0</code> 。</p>\n<blockquote>\n<p>原因是：如果未指定 &quot;% g&quot; 字段，并且文件计数大于 1，那么生成号将被添加到所生成文件名末尾的小数点后面。</p>\n</blockquote>\n<p>如果是：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.pattern</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">logs/java%g.log</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.limit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">50000</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.count</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">2</span></pre></td></tr></table></figure><p>就 hi 产生 <code>java0.log</code>  和 <code>java0.log.1</code> 。</p>\n<p>还有其他的使用，请参考：<span class=\"exturl\" data-url=\"aHR0cDovL2l0bXlob21lLmNvbS9qYXZhLWFwaS9qYXZhL3V0aWwvbG9nZ2luZy9GaWxlSGFuZGxlci5odG1s\">http://itmyhome.com/java-api/java/util/logging/FileHandler.html</span></p>\n<h2 id=\"提示\"><a class=\"anchor\" href=\"#提示\">#</a> 提示</h2>\n<p>配置文件只是简化了初始化过程，如果你希望更细致的配置，比如每个类的输出文件我希望是<strong>类名 + log 后缀</strong>，同时一个文件写满了，可以轮询下一个文件，那么这个就需要自己代码设置了：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProjectInfo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">FileHandler</span> selfHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileHandler</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    <span class=\"token string\">\"logs/ \"</span><span class=\"token operator\">+</span> <span class=\"token class-name\">ProjectInfo</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSimpleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%g.log\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            logger<span class=\"token punctuation\">.</span><span class=\"token function\">addHandler</span><span class=\"token punctuation\">(</span>selfHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Project is Loading\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后强调一遍，如果 <code>%g%u</code>  不明白，就去看 API 文档。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL3Fpbmdrb25neGlhZ3VhbmcvamF2YXdlYi9nbjBzeXQjMTU3MzYzOGU=\">https://www.yuque.com/qingkongxiaguang/javaweb/gn0syt#1573638e</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYnliZWl5YS9wLzE0OTAwNTMwLmh0bWw=\">https://www.cnblogs.com/bybeiya/p/14900530.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTM2OTI2NTY4Nzg1Mzk1NzE5\">https://juejin.cn/post/7136926568785395719</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2l0bXlob21lLmNvbS9qYXZhLWFwaS9qYXZhL3V0aWwvbG9nZ2luZy9GaWxlSGFuZGxlci5odG1s\">http://itmyhome.com/java-api/java/util/logging/FileHandler.html</span></p>\n</blockquote>\n",
            "tags": [
                "日志框架"
            ]
        },
        {
            "id": "https://cecilia.cool/2022/10/19/Framework/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/%E6%97%A5%E5%BF%97(1)-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",
            "url": "https://cecilia.cool/2022/10/19/Framework/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/%E6%97%A5%E5%BF%97(1)-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",
            "title": "日志(1)--配置文件",
            "date_published": "2022-10-19T08:50:49.000Z",
            "content_html": "<h1 id=\"配置文件\"><a class=\"anchor\" href=\"#配置文件\">#</a> 配置文件</h1>\n<p>读取一个配置文件，以 <code>logging.properties</code>  文件为例，分为读取和加载两步。Java 内置了一些方法来找配置文件，将其转换为输入流来操作。</p>\n<h2 id=\"读取文件\"><a class=\"anchor\" href=\"#读取文件\">#</a> 读取文件</h2>\n<p>下面讲解几种常用的方法，使用时选一种即可：</p>\n<ul>\n<li><code>Class&lt;?&gt;</code>  提供的 <code>getResourceAsStream</code>  方法。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>cyan</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">InputStream</span> <span class=\"token class-name\">F</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logging.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">InputStream</span> <span class=\"token class-name\">S</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/logging.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">F</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>该方法会根据传入的字符串是否有 <code>/</code>  来选择文件路径。如果没有 <code>/</code> ，就会在 <code>Class&lt;?&gt;</code>  所在包名 + 文件名，在此中就是 <code>com/cyan/logging.properties</code> 。如果加了 <code>/</code>  就会是根目录文件，就会在 <code>resources</code>  目录下找。本质上解析后的 <code>name</code>  会交给 <code>ClassLoader</code>  去找文件，所以基本不用这种方法，要用也是将文件放到 <code>resources</code>  目录下面，然后 <code>name</code>  传入 <code>/文件名</code> 。</p>\n<ul>\n<li><code>ClassLoader</code>  提供的 <code>getResourceAsStream</code>  方法：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">InputStream</span> <span class=\"token class-name\">F</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t\t\t\t\t<span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logging.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">F</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>Resources.getResourceAsReader()</code>  方法：这个方法是 <code>mybatis</code>  定义的类，使用需要导入依赖</li>\n</ul>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.4.6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>然后就像读取 mybatis 配置文件那样：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsReader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"加载文件\"><a class=\"anchor\" href=\"#加载文件\">#</a> 加载文件</h2>\n<ul>\n<li><code>ResourceBundle</code> ，这个类专门处理 <code>properties</code>  文件，所以不需要加上后缀名，该类继承读取和加载两个功能。</li>\n</ul>\n<p>写先配置文件</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 文件名为 test.properties</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">慕青</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">sex</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">男</span></pre></td></tr></table></figure><p>加载试着读取一下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ResourceBundle</span> resourceBundle <span class=\"token operator\">=</span> <span class=\"token class-name\">ResourceBundle</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBundle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>resourceBundle<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 结果是乱码：éè²</span></pre></td></tr></table></figure><p>想要正确读码，需要转一下， <code>ResourceBundle</code>  使用的是 <code>ISO_8859_1</code>  编码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ResourceBundle</span> resourceBundle <span class=\"token operator\">=</span> <span class=\"token class-name\">ResourceBundle</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBundle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tmp <span class=\"token operator\">=</span> resourceBundle<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ISO_8859_1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>ResourceBundle</code>  核心作用是<strong>用于解析国际化资源属性文件</strong>，会根据本地环境自动选择对应的国际化资源，但是要准备若干个配置文件（先把之前的那个 <code>test.perproties</code>  删了）：</p>\n<p><code>test_zh_cn.properties</code>  和 <code>test_en_us</code> ：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># zh_cn 配置文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">慕青</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">sex</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">男</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># en_us 配置文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">Cyan</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">sex</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">man</span></pre></td></tr></table></figure><p>现在文件目录就是：</p>\n<p><img data-src=\"https://s3.uuu.ovh/imgs/2022/11/30/43bb6c14906cd8b0.jpg\" alt=\"\" /></p>\n<p>执行代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ResourceBundle</span> resourceBundle <span class=\"token operator\">=</span> <span class=\"token class-name\">ResourceBundle</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBundle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">ResourceBundle</span> resourceBundleUS <span class=\"token operator\">=</span> <span class=\"token class-name\">ResourceBundle</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBundle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Locale</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"en\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"us\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tmp <span class=\"token operator\">=</span> resourceBundle<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ISO_8859_1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTF_8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>resourceBundleUS<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>此时在 <code>resource</code>  目录下再创建一个 <code>test.properties</code>  文件，就会自动将这几个文件合并成一个 <code>Resource Bundle 'test'</code>  资源包，文件的实际目录没有改变，只是说这种同名不同语言的文件放在一个包下方便管理。</p>\n<p>我们也可以手动快速创建，只需要 <code>右键-&gt;NEW-&gt;Resource Bundle</code>  即可。</p>\n<ul>\n<li><code>Properties</code>  也可以加载，而且功能很丰富。</li>\n</ul>\n<blockquote>\n<p>项目是一个 web 项目，配置文件都放在 resource 目录中，所以文件名就是源路径。</p>\n</blockquote>\n<p><code>xml</code>  是配置文件的一种，但是之前在 <code>mybatis</code>  篇章里面解析 <code>xml</code>  很麻烦，要一个节点一个节点的去解析（或者需要哪个节点就找哪个节点）。还有一种配置文件就是 Properties 文件。</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">Cyan</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">sex</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">man</span></pre></td></tr></table></figure><p>很显然，想要自定义标签，就需要自定义解析器。文件配置格式为：<strong>配置项 = 配置值</strong>，类似于键值对的形式，之后写 Java 程序也是直接通过配置项获取值，像 Map 一样：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Properties</span> properties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsReader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" is a \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                           properties<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 结果：\"Cyan\" is a \"man\"</span></pre></td></tr></table></figure><p>之后就是一些方法的介绍（其实方法看名字就能看出来用法）：</p>\n<p><strong>get</strong> 系列：</p>\n<ul>\n<li><code>getOrDefault(Object key, Object defaultValue)</code> ：和 HashMap 的同名方法一样。</li>\n<li><code>getProperty(String key)</code>  ，  <code>getProperty(String key, String defaultValue)</code> 。</li>\n</ul>\n<p><strong>load</strong> 系列：</p>\n<ul>\n<li><code>load(InputStream inStream)</code>   ，  <code>load(Reader reader)</code>  两个加载方法。</li>\n<li><code>loadFromXML(InputStream in)</code>  源文件为 xml。</li>\n</ul>\n<p>但是 <code>xml</code>  文件必须要<strong>符合规范</strong>，而不是随便写写：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">properties</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">\"http://java.sun.com/dtd/properties.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>comment</span><span class=\"token punctuation\">></span></span>xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>comment</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>test the properties<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>entry</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>还有 <code>set,put,setProperty</code>  方法，不多说。</p>\n<p><strong>store</strong> 系列：</p>\n<ul>\n<li><code>store(OutputStream / Writer, String)</code> ，可以将配置存储到文件中， <code>String</code>  是评论。</li>\n<li><code>storeToXML((OutputStream , String)</code> ，存储到 xml 文件中。</li>\n</ul>\n<p>之前我们说过， <code>Properties</code>  加载 <code>xml</code>  配置文件一定格式，如果你不清楚格式，你可以先随便写点正常的配置文件，然后再保存到 <code>xml</code>  文件中，就可以查看正确格式。</p>\n<p>我们为了方便，就保存到控制台中：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Properties</span> properties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsReader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">storeToXML</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">,</span><span class=\"token string\">\"第一次存储\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 配置文件和最顶上的一样</span></pre></td></tr></table></figure><p>结果，传入的 <code>String</code>  放在了 <code>&lt;comment&gt;</code>  标签中：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">properties</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">\"http://java.sun.com/dtd/properties.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>comment</span><span class=\"token punctuation\">></span></span>第一次存储<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>comment</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Cyan<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>entry</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>man<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>entry</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>如果对系统参数感兴趣可以执行： <code>System.getProperties().store(System.out, &quot;系统信息：&quot;);</code> 。</p>\n</blockquote>\n<h1 id=\"日志配置\"><a class=\"anchor\" href=\"#日志配置\">#</a> 日志配置</h1>\n<blockquote>\n<p>前文只是讲到了如何读取加载一个配置文件。</p>\n</blockquote>\n<p>JUL 一般都是以文件方式进行配置，如果没有设置配制文件，则会读取系统默认配置文件，位置为 <code>jre/lib/logging.properties</code> 。</p>\n<blockquote>\n<p>其实在这个目录下你会看到各种各样的配置文件。</p>\n</blockquote>\n<p>点进这个系统默认的配置文件看一下内容（注释我并没有写上去），我们可以看到一些熟悉的内容：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">handlers</span><span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.FileHandler</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">.level</span><span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">INFO</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.pattern</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">./java%u.log</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.limit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">50000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.count</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.FileHandler.formatter</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">java.util.logging.SimpleFormatter</span></pre></td></tr></table></figure><p>挑几个讲解，配置文件分别对 <code>FileHandler</code>  和 <code>ConsoleHandler</code>  进行了初始化配置：</p>\n<ul>\n<li>\n<p>默认控制器是 <code>ConsoleHandler</code> （第一行代码），默认等级是 <code>INFO</code> （第二行）。</p>\n</li>\n<li>\n<p><code>FileHandler</code>  使用 XML 的输出格式，所以文件输出的默认都是 XML 格式（控制台那个就不说了）。</p>\n</li>\n<li>\n<p>默认</p>\n</li>\n</ul>\n<p>我们可以自定义配置文件来规定日志打印器的一些默认值：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># RootLogger 的默认处理器为</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">handlers</span><span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.ConsoleHandler</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># RootLogger 的默认的日志级别</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">.level</span><span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">CONFIG</span></pre></td></tr></table></figure><p>读取配置文件：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 获取日志管理器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">LogManager</span> manager <span class=\"token operator\">=</span> <span class=\"token class-name\">LogManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 读取我们自己的配置文件，这里是 AsStream</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    manager<span class=\"token punctuation\">.</span><span class=\"token function\">readConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/logging.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 再获取日志打印器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"我是一条日志信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面的系统默认配置文件的顺序是：</p>\n<ul>\n<li>先指定日志的配置（用什么控制器，用哪种日志级别。。）</li>\n<li>在修改单个组件的配置，比如控制器的配置。</li>\n</ul>\n<p>那么我们怎么直到控制器的哪些配置可以修改？阅读 <code>ConsoleHandler</code>  源码会发现，它会通过读取配置文件来进行某些参数设置：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">LogManager</span> manager <span class=\"token operator\">=</span> <span class=\"token class-name\">LogManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">String</span> cname <span class=\"token operator\">=</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 这里就可以看到哪些配置可以修改</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span>manager<span class=\"token punctuation\">.</span><span class=\"token function\">getLevelProperty</span><span class=\"token punctuation\">(</span>cname <span class=\"token operator\">+</span><span class=\"token string\">\".level\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INFO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">setFilter</span><span class=\"token punctuation\">(</span>manager<span class=\"token punctuation\">.</span><span class=\"token function\">getFilterProperty</span><span class=\"token punctuation\">(</span>cname <span class=\"token operator\">+</span><span class=\"token string\">\".filter\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">setFormatter</span><span class=\"token punctuation\">(</span>manager<span class=\"token punctuation\">.</span><span class=\"token function\">getFormatterProperty</span><span class=\"token punctuation\">(</span>cname <span class=\"token operator\">+</span><span class=\"token string\">\".formatter\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleFormatter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">setEncoding</span><span class=\"token punctuation\">(</span>manager<span class=\"token punctuation\">.</span><span class=\"token function\">getStringProperty</span><span class=\"token punctuation\">(</span>cname <span class=\"token operator\">+</span><span class=\"token string\">\".encoding\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">setEncoding</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// doing a setEncoding with null should always work.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// assert false;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"lombok开启日志\"><a class=\"anchor\" href=\"#lombok开启日志\">#</a> Lombok 开启日志</h2>\n<blockquote>\n<p>我不想每个类都编写获取 Logger，配置 Handler 的代码怎么办。</p>\n</blockquote>\n<p>可以通过注解快速生成 Logger。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Log</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"自动生成的Logger名称：\"</span><span class=\"token operator\">+</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是日志信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"mybatis日志\"><a class=\"anchor\" href=\"#mybatis日志\">#</a> Mybatis 日志</h2>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>setting</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logImpl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT_LOGGING<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p><code>logImpl</code>  包括很多种配置项，包括 SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING，而默认情况下是未配置，也就是说不打印。</p>\n<p><code>JDK_LOGGING</code>  就是使用 JUL 进行日志打印，Mybatis 的日志级别都比较低，需要设置 <code>logging.properties</code>  默认日志级别。</p>\n<p>如果你觉得打印出来的日志效果不好，你可以自己新建一个类，继承 <code>Formatter</code> ，然后再配置文件中改一下配置即可：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestFormatter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Formatter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LogRecord</span> record<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">SimpleDateFormat</span> format <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd HH:mm:ss.SSS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">String</span> time <span class=\"token operator\">=</span> format<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">getMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 格式化日志时间</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> time <span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>改一下配置：</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">handlers</span><span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">java.util.logging.ConsoleHandler</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">.level</span><span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">ALL</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.ConsoleHandler.level</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">ALL</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">java.util.logging.ConsoleHandler.formatter</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">com.test.TestFormatter</span></pre></td></tr></table></figure><h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGVnb25nc2hhbi5jb20vMjAyMC8wNy8wNS9qYXZhLWNsYXNzLWdldC1yZXNvdXJjZS1hcy1zdHJlYW0v\">https://www.hegongshan.com/2020/07/05/java-class-get-resource-as-stream/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNDE4Njk1MC9hcnRpY2xlL2RldGFpbHMvODg3NTEyMTI/b3BzX3JlcXVlc3RfbWlzYz0mYW1wO3JlcXVlc3RfaWQ9JmFtcDtiaXpfaWQ9MTAyJmFtcDt1dG1fdGVybT1kaXNzb2NpYXRlJTIwcmVzb3VyY2UlMjBidW5kbGUmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfnNvYmFpZHV3ZWJ+ZGVmYXVsdC0xLTg4NzUxMjEyLm5vbmVjYXNlJmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\">Intellij IDEA Resource Bundle</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1ZXlpamluL2FydGljbGUvZGV0YWlscy8xMjM5NzU0NjU/b3BzX3JlcXVlc3RfbWlzYz0lMjU3QiUyNTIycmVxdWVzdCUyNTVGaWQlMjUyMiUyNTNBJTI1MjIxNjY5ODA0ODMwMTY4MDAxODA2MzA0NDglMjUyMiUyNTJDJTI1MjJzY20lMjUyMiUyNTNBJTI1MjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyNTIyJTI1N0QmYW1wO3JlcXVlc3RfaWQ9MTY2OTgwNDgzMDE2ODAwMTgwNjMwNDQ4JmFtcDtiaXpfaWQ9MCZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMn5hbGx+dG9wX2NsaWNrfmRlZmF1bHQtMi0xMjM5NzU0NjUtbnVsbC1udWxsLjE0MiU1RXY2NyU1RXBjX3JhbmtfMzRfcXVlcnlyZWxldmFudDI1LDIwMSU1RXYzJTVFY29udHJvbF8xLDIxMyU1RXYyJTVFdDNfZXNxdWVyeV92MSZhbXA7dXRtX3Rlcm09UmVzb3VyY2VCdW5kbGUmYW1wO3NwbT0xMDE4LjIyMjYuMzAwMS40MTg3\">Properties 与 ResourceBundle 的基本使用以及区别</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2l0ZXllXzEyNTgwL2FydGljbGUvZGV0YWlscy84MjAzMTUzMA==\">https://blog.csdn.net/iteye_12580/article/details/82031530</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL3Fpbmdrb25neGlhZ3VhbmcvamF2YXdlYi9nbjBzeXQjY2VjMTBjY2M=\">https://www.yuque.com/qingkongxiaguang/javaweb/gn0syt#cec10ccc</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9haWd1by5pbmZvL2FyY2hpdmVzLzQ1NQ==\">https://aiguo.info/archives/455</span></p>\n</blockquote>\n",
            "tags": [
                "日志框架"
            ]
        }
    ]
}